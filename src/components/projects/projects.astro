---
import esp32 from '../icons/esp32.astro';
import flutter from '../icons/flutter.astro';
import iot from '../icons/iot.astro';

const TAGS = {
  flutter: {
    name: 'Flutter',
    class: 'bg-blue-200 text-blue-800 dark:bg-blue-800/30 dark:text-blue-200',
    icon: flutter,
  },
  esp32: {
    name: 'ESP32',
    class:
      'bg-green-200 text-green-800 dark:bg-green-800/30 dark:text-green-200',
    icon: esp32,
  },
  iot: {
    name: 'IoT',
    class:
      'bg-purple-200 text-purple-800 dark:bg-purple-800/30 dark:text-purple-200',
    icon: iot,
  },
};

const PROJECTS = [
  {
    title: 'Cercasco',
    description:
      'Sistema de alerta para ciclistas que detecta vehículos traseros con ultrasonido y emite alertas visuales (LED) y hápticas (vibración).',
    link: '#',
    github: 'https://github.com/luvaldev/cercasco',
    image: '../../../public/resources/svgl.webp',
    tags: [TAGS.esp32, TAGS.flutter, TAGS.iot],
  },
  {
    title: 'Programming Study Resources',
    description:
      'Resumenes y recursos técnicos para el aprendizaje de lenguajes de programación. Material conciso y accesible para reforzar conceptos clave y mejorar habilidades de programación, con el objetivo de apoyar el aprendizaje de la comunidad.',
    link: '#',
    github: 'https://github.com/luvaldev/programming-study-resources',
    image: '../../../public/resources/svgl.webp',
    tags: [TAGS.esp32],
  },
  {
    title: 'Casino Management Platform',
    description:
      'Aplicación web modular para gestión de un casino, con interfaz dinámica, autenticación de usuarios, administración de productos y consumo de una API REST.',
    link: '#',
    github: 'https://github.com/luvaldev/casino-management-platform',
    image: '../../../public/resources/svgl.webp',
    tags: [TAGS.flutter],
  },
];
---

{
  PROJECTS.map(({ title, description, tags, image }) => (
    <article class="mb-10">
      <h3 class="text-2xl font-semibold text-purple-500 mb-2">{title}</h3>
      <p class="text-lg mb-4 text-pretty">{description}</p>
      <ul class="flex gap-x-2 flex-row mb-4">
        {tags.map(tag => (
          <li>
            <span
              class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2`}>
              <tag.icon class="w-4 h-4 inline-block mr-1" />
              {tag.name}
            </span>
          </li>
        ))}
      </ul>
      <img
        class="rounded shadow-2xl shadow-white/10"
        src={image}
        alt={`Captura de pantalla del proyecto ${image}`}
      />
    </article>
  ))
}
